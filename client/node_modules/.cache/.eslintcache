[{"/Users/mitchelleglon/Portfolio/movie-app/client/src/index.js":"1","/Users/mitchelleglon/Portfolio/movie-app/client/src/App.js":"2","/Users/mitchelleglon/Portfolio/movie-app/client/src/reportWebVitals.js":"3","/Users/mitchelleglon/Portfolio/movie-app/client/src/app/store.js":"4","/Users/mitchelleglon/Portfolio/movie-app/client/src/features/counter/counterSlice.js":"5","/Users/mitchelleglon/Portfolio/movie-app/client/src/features/counter/Counter.js":"6","/Users/mitchelleglon/Portfolio/movie-app/client/src/features/counter/counterAPI.js":"7","/Users/mitchelleglon/Portfolio/movie-app/client/src/pages/Login.jsx":"8","/Users/mitchelleglon/Portfolio/movie-app/client/src/pages/Liked.jsx":"9","/Users/mitchelleglon/Portfolio/movie-app/client/src/pages/UserSearch.jsx":"10","/Users/mitchelleglon/Portfolio/movie-app/client/src/pages/SignUp.jsx":"11","/Users/mitchelleglon/Portfolio/movie-app/client/src/pages/NotFound.jsx":"12","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/LoginForm.jsx":"13","/Users/mitchelleglon/Portfolio/movie-app/client/src/features/user/userSlice.js":"14","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/SignUpForm.jsx":"15","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/ProtectedRoutes.jsx":"16","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/Header.jsx":"17","/Users/mitchelleglon/Portfolio/movie-app/client/src/pages/Dashboard.jsx":"18","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/FeaturedMovies.jsx":"19","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/FeaturedSeries.jsx":"20","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/UserLikedMovies.jsx":"21","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/UserLikedShows.jsx":"22","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/MovieModal.jsx":"23","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/ShowModal.jsx":"24","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/PopularMovies.jsx":"25","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/TopRatedMovies.jsx":"26","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/PopularSeries.jsx":"27","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/TopRatedSeries.jsx":"28","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/Search.jsx":"29"},{"size":1834,"mtime":1660835588834,"results":"30","hashOfConfig":"31"},{"size":346,"mtime":1659868022848,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1659697524580,"results":"33","hashOfConfig":"31"},{"size":894,"mtime":1659705860325,"results":"34","hashOfConfig":"31"},{"size":2746,"mtime":1659697524577,"results":"35","hashOfConfig":"31"},{"size":1759,"mtime":1659697524575,"results":"36","hashOfConfig":"31"},{"size":196,"mtime":1659697524577,"results":"37","hashOfConfig":"31"},{"size":768,"mtime":1659702876454,"results":"38","hashOfConfig":"31"},{"size":1221,"mtime":1660736309152,"results":"39","hashOfConfig":"31"},{"size":769,"mtime":1664433525573,"results":"40","hashOfConfig":"31"},{"size":774,"mtime":1659779015482,"results":"41","hashOfConfig":"31"},{"size":698,"mtime":1659702237087,"results":"42","hashOfConfig":"31"},{"size":1477,"mtime":1659869078110,"results":"43","hashOfConfig":"31"},{"size":4292,"mtime":1663939368138,"results":"44","hashOfConfig":"31"},{"size":1925,"mtime":1659787838915,"results":"45","hashOfConfig":"31"},{"size":380,"mtime":1659788140427,"results":"46","hashOfConfig":"31"},{"size":10659,"mtime":1662804511978,"results":"47","hashOfConfig":"31"},{"size":1270,"mtime":1662222388937,"results":"48","hashOfConfig":"31"},{"size":2567,"mtime":1662223589184,"results":"49","hashOfConfig":"31"},{"size":3189,"mtime":1660836285506,"results":"50","hashOfConfig":"31"},{"size":2510,"mtime":1663517843850,"results":"51","hashOfConfig":"31"},{"size":2872,"mtime":1664171259083,"results":"52","hashOfConfig":"31"},{"size":2433,"mtime":1660759285484,"results":"53","hashOfConfig":"31"},{"size":2430,"mtime":1664434645396,"results":"54","hashOfConfig":"31"},{"size":2566,"mtime":1660837612684,"results":"55","hashOfConfig":"31"},{"size":2576,"mtime":1662033777486,"results":"56","hashOfConfig":"31"},{"size":3183,"mtime":1662222285336,"results":"57","hashOfConfig":"31"},{"size":3187,"mtime":1662222325458,"results":"58","hashOfConfig":"31"},{"size":4215,"mtime":1664433701354,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"51qtm8",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"63"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"63"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"63"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"63"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"63"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"63"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"63"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"63"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"63"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mitchelleglon/Portfolio/movie-app/client/src/index.js",[],[],[],"/Users/mitchelleglon/Portfolio/movie-app/client/src/App.js",["162","163"],[],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport { Counter } from \"./features/counter/Counter\";\nimport \"./App.css\";\nimport { Outlet } from \"react-router-dom\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Outlet />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mitchelleglon/Portfolio/movie-app/client/src/reportWebVitals.js",[],[],"/Users/mitchelleglon/Portfolio/movie-app/client/src/app/store.js",["164"],[],"import counterReducer from \"../features/counter/counterSlice\";\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"../features/user/userSlice\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\n// import rootReducer from './reducers'\n\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n  user: userReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n","/Users/mitchelleglon/Portfolio/movie-app/client/src/features/counter/counterSlice.js",[],[],"/Users/mitchelleglon/Portfolio/movie-app/client/src/features/counter/Counter.js",[],[],"/Users/mitchelleglon/Portfolio/movie-app/client/src/features/counter/counterAPI.js",[],[],"/Users/mitchelleglon/Portfolio/movie-app/client/src/pages/Login.jsx",[],[],"/Users/mitchelleglon/Portfolio/movie-app/client/src/pages/Liked.jsx",["165","166"],[],"// Copyright 2022 mitchelleglon\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport React, { useEffect } from \"react\";\nimport UserLikedMovies from \"../components/UserLikedMovies\";\nimport UserLikedShows from \"../components/UserLikedShows\";\nimport { updateUserMoviesDb } from \"../components/FeaturedMovies\";\nimport { updateUserShowsDb } from \"../components/FeaturedSeries\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction Liked() {\n  const user = useSelector((store) => store.user.user);\n  useEffect(() => {\n    updateUserMoviesDb(user);\n    updateUserShowsDb(user);\n  }, []);\n\n  return (\n    <div>\n      <UserLikedMovies />\n      <UserLikedShows />\n    </div>\n  );\n}\n\nexport default Liked;\n","/Users/mitchelleglon/Portfolio/movie-app/client/src/pages/UserSearch.jsx",[],[],"/Users/mitchelleglon/Portfolio/movie-app/client/src/pages/SignUp.jsx",[],[],"/Users/mitchelleglon/Portfolio/movie-app/client/src/pages/NotFound.jsx",[],[],"/Users/mitchelleglon/Portfolio/movie-app/client/src/components/LoginForm.jsx",["167"],[],"import React, { useState } from \"react\";\n// import { getMovies } from \"./../features/movies/movieSlice\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"./../features/user/userSlice\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst schema = yup\n  .object({\n    username: yup.string().required(),\n    password: yup.string().required(),\n  })\n  .required();\n\nconst defaultValues = {\n  username: \"\",\n  password: \"\",\n};\n\nexport default function LoginForm() {\n  const user = useSelector((store) => store.user.user);\n  const [isUserPresent, setIsUserPresent] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: \"onChange\",\n    defaultValues: defaultValues,\n  });\n  const onSubmit = async (data) => {\n    console.log(data);\n    dispatch(login(data));\n    setIsUserPresent(true);\n    reset();\n  };\n\n  if (isUserPresent) {\n    navigate(\"/\");\n    setIsUserPresent(false);\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input {...register(\"username\")} />\n      <p>{errors.username?.message}</p>\n\n      <input {...register(\"password\")} />\n      <p>{errors.password?.message}</p>\n\n      <input type=\"submit\" />\n    </form>\n  );\n}\n","/Users/mitchelleglon/Portfolio/movie-app/client/src/features/user/userSlice.js",[],[],"/Users/mitchelleglon/Portfolio/movie-app/client/src/components/SignUpForm.jsx",["168"],[],"import React, { useEffect, useState } from \"react\";\n// import { getMovies } from \"./../features/movies/movieSlice\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signup, updateMessage } from \"./../features/user/userSlice\";\nimport storage from \"redux-persist/lib/storage\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst schema = yup\n  .object({\n    email: yup.string().required(),\n    username: yup.string().required(),\n    password: yup.string().required(),\n  })\n  .required();\n\nconst defaultValues = {\n  email: \"\",\n  username: \"\",\n  password: \"\",\n};\n\nexport default function SignUpForm() {\n  const navigate = useNavigate();\n  const [toLogin, setToLogin] = useState(false);\n  const message = useSelector((store) => store.user.message);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log(message);\n    if (message.status === 200) {\n      console.log(message.status);\n      setToLogin(true);\n    }\n  }, [message]);\n\n  if (toLogin) {\n    console.log(\"true\");\n    navigate(\"/login\");\n    dispatch(updateMessage());\n    setToLogin(false);\n  }\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: \"onChange\",\n    defaultValues: defaultValues,\n  });\n  const onSubmit = async (data) => {\n    console.log(data);\n    dispatch(signup(data));\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input {...register(\"email\")} placeholder=\"Email\" />\n      <p>{errors.email?.message}</p>\n      <input {...register(\"username\")} placeholder=\"Username\" />\n      <p>{errors.username?.message}</p>\n\n      <input {...register(\"password\")} placeholder=\"Password\" />\n      <p>{errors.password?.message}</p>\n\n      <input type=\"submit\" />\n    </form>\n  );\n}\n","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/ProtectedRoutes.jsx",[],[],"/Users/mitchelleglon/Portfolio/movie-app/client/src/components/Header.jsx",["169","170","171"],[],"// // Copyright 2022 mitchelleglon\n// //\n// // Licensed under the Apache License, Version 2.0 (the \"License\");\n// // you may not use this file except in compliance with the License.\n// // You may obtain a copy of the License at\n// //\n// //     http://www.apache.org/licenses/LICENSE-2.0\n// //\n// // Unless required by applicable law or agreed to in writing, software\n// // distributed under the License is distributed on an \"AS IS\" BASIS,\n// // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// // See the License for the specific language governing permissions and\n// // limitations under the License.\n// import React from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { logout } from \"../features/user/userSlice\";\n// import { useNavigate, Link } from \"react-router-dom\";\n// function Header() {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const user = useSelector((store) => store.user.user);\n//   return (\n//     <div className=\"header-container\">\n//       <div className=\"navbar\">\n//         <h1>MovMatch</h1>\n\n//         <p>Browse V</p>\n//         <Link to={`/`}>Home</Link>\n//         {user && <Link to={`/liked`}>Liked</Link>}\n//         {user && <Link to={`/usersearch`}>Search Users</Link>}\n\n//         {user && (\n//           <button\n//             onClick={() => {\n//               dispatch(logout());\n//               navigate(\"/login\");\n//             }}\n//           >\n//             Logout\n//           </button>\n//         )}\n//         {!user && (\n//           <button\n//             onClick={() => {\n//               navigate(\"/login\");\n//             }}\n//           >\n//             Login\n//           </button>\n//         )}\n//         {!user && (\n//           <button\n//             onClick={() => {\n//               navigate(\"/signup\");\n//             }}\n//           >\n//             Sign Up\n//           </button>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Header;\n\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport AdbIcon from \"@mui/icons-material/Adb\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../features/user/userSlice\";\n\nconst pages = [\"Home\", \"My List\", \"User Search\"];\nconst settings = [\"Profile\", \"Account\", \"Dashboard\", \"Logout\"];\n\nconst ResponsiveAppBar = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = useSelector((store) => store.user.user);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar\n      position=\"static\"\n      sx={{\n        backgroundColor: \"#000000f2\",\n        boxShadow: \"0 0 10px 10px black\",\n        position: \"sticky\",\n        top: \"0\",\n        zIndex: \"1111111\",\n        border: \"none\",\n        marginBlockEnd: \"20px\",\n      }}\n    >\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <AdbIcon sx={{ display: { xs: \"none\", md: \"flex\" }, mr: 1 }} />\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href=\"/\"\n            sx={{\n              mr: 2,\n              display: { xs: \"none\", md: \"flex\" },\n              fontFamily: \"monospace\",\n              fontWeight: 700,\n              letterSpacing: \".3rem\",\n              color: \"inherit\",\n              textDecoration: \"none\",\n            }}\n          >\n            MOVIEMATCH\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: \"block\", md: \"none\" },\n              }}\n            >\n              {/* {pages.map((page) => (\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\n                  <Link to=\"\"/>\n                  <Typography textAlign=\"center\">{page}</Typography>\n                </MenuItem>\n              ))} */}\n              <MenuItem key={\"home\"} onClick={handleCloseNavMenu}>\n                <Link to={\"/\"}>\n                  <Typography textAlign=\"center\">Home</Typography>\n                </Link>\n              </MenuItem>\n              {user && (\n                <MenuItem key={\"my-list\"} onClick={handleCloseNavMenu}>\n                  <Link to={\"/liked\"}>\n                    <Typography textAlign=\"center\">my List</Typography>\n                  </Link>\n                </MenuItem>\n              )}\n              <MenuItem key={\"user-search\"} onClick={handleCloseNavMenu}>\n                <Link to={\"/usersearch\"}>\n                  <Typography textAlign=\"center\">User Search</Typography>\n                </Link>\n              </MenuItem>\n            </Menu>\n          </Box>\n          <AdbIcon sx={{ display: { xs: \"flex\", md: \"none\" }, mr: 1 }} />\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            href=\"\"\n            sx={{\n              mr: 2,\n              display: { xs: \"flex\", md: \"none\" },\n              flexGrow: 1,\n              fontFamily: \"monospace\",\n              fontWeight: 700,\n              letterSpacing: \".3rem\",\n              color: \"inherit\",\n              textDecoration: \"none\",\n            }}\n          >\n            MOVIEMATCH\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            {/* {pages.map((page) => (\n              <Button\n                key={page}\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                {page}\n              </Button>\n            ))} */}\n            <Button\n              key={\"home\"}\n              onClick={handleCloseNavMenu}\n              sx={{ my: 2, color: \"white\", display: \"block\" }}\n            >\n              <Link to={\"/\"}>\n                <Typography textAlign=\"center\">Home</Typography>\n              </Link>\n            </Button>\n            {user && (\n              <Button\n                key={\"list\"}\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                <Link to={\"/liked\"}>\n                  <Typography textAlign=\"center\">my List</Typography>\n                </Link>\n              </Button>\n            )}\n            {user && (\n              <Button\n                key={\"usersearch\"}\n                onClick={handleCloseNavMenu}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                <Link to={\"/usersearch\"}>\n                  <Typography textAlign=\"center\">User Search</Typography>\n                </Link>\n              </Button>\n            )}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton\n                onClick={handleOpenUserMenu}\n                sx={{ p: 0, color: \"white\" }}\n              >\n                <PersonIcon />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: \"45px\" }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {/* {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))} */}\n              {!user && (\n                <MenuItem\n                  key={\"login\"}\n                  onClick={() => {\n                    handleCloseUserMenu();\n                    navigate(\"/login\");\n                  }}\n                >\n                  <Typography textAlign=\"center\">Login</Typography>\n                </MenuItem>\n              )}\n              {user && (\n                <MenuItem\n                  key={\"logout\"}\n                  onClick={() => {\n                    handleCloseUserMenu();\n                    dispatch(logout());\n                    navigate(\"/login\");\n                  }}\n                >\n                  <Typography textAlign=\"center\">Logout</Typography>\n                </MenuItem>\n              )}\n              {!user && (\n                <MenuItem\n                  key={\"signup\"}\n                  onClick={() => {\n                    handleCloseUserMenu();\n\n                    navigate(\"/signup\");\n                  }}\n                >\n                  <Typography textAlign=\"center\">Sign Up</Typography>\n                </MenuItem>\n              )}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default ResponsiveAppBar;\n","/Users/mitchelleglon/Portfolio/movie-app/client/src/pages/Dashboard.jsx",[],[],"/Users/mitchelleglon/Portfolio/movie-app/client/src/components/FeaturedMovies.jsx",[],[],"/Users/mitchelleglon/Portfolio/movie-app/client/src/components/FeaturedSeries.jsx",["172"],[],"// Copyright 2022 mitchelleglon\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport React, { useEffect, useState } from \"react\";\nimport { updateUserShows } from \"../features/user/userSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ScrollDialog from \"./ShowModal\";\n\nexport const updateUserShowsDb = async (userInfo) => {\n  // const userId = userInfo.id;\n  // console.log(userInfo.accessToken);\n\n  try {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": userInfo.accessToken,\n      },\n      body: JSON.stringify({ userInfo }),\n    };\n\n    const response = await fetch(\n      `http://127.0.0.1:8080/api/update/userShows`,\n      options\n    );\n    const data = await response.json();\n    console.log(data);\n  } catch (err) {}\n};\n\nfunction FeaturedSeries() {\n  const dispatch = useDispatch();\n  const TV_ENDPOINT = process.env.TV_ENDPOINT;\n  const [series, setSeries] = useState([]);\n  const user = useSelector((store) => store.user.user);\n\n  const getSeries = async () => {\n    let rand = Math.floor(Math.random() * 10 + 1);\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/trending/tv/day?api_key=4503e42f5762f850ada999d307bfc5f9&page=${rand}`\n      );\n      const data = await response.json();\n      console.log(data.page);\n      console.log(data.results);\n      setSeries(data.results);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const clickHandler = (likedShowId, currentUser) => {\n    dispatch(updateUserShows(likedShowId));\n  };\n\n  useEffect(() => {\n    getSeries();\n  }, []);\n\n  return (\n    <div className=\"featured-movie-section\">\n      <h2>Featured TV Shows</h2>\n      <div className=\"movies-container\">\n        {series &&\n          series.map((show) => (\n            <div className=\"movie-card\" key={show.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${show.poster_path}`}\n                alt=\"movie poster\"\n              />\n              <div className=\"movie-card-text-overlay\">\n                {/* <p>{movie.overview}</p> */}\n                <h4>{show.name}</h4>\n\n                <div className=\"movie-card-overlay-btns\">\n                  <ScrollDialog item={show} user={user} />\n                  <div\n                    onClick={() => {\n                      updateUserShowsDb(user);\n                      clickHandler(String(show.id), user);\n                    }}\n                  >\n                    Like\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FeaturedSeries;\n","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/UserLikedMovies.jsx",["173","174"],[],"import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { removeUserMovie } from \"../features/user/userSlice\";\n\nexport const updateUserMoviesDb = async (userInfo) => {\n  try {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": userInfo.accessToken,\n      },\n      body: JSON.stringify({ userInfo }),\n    };\n\n    const response = await fetch(\n      `http://127.0.0.1:8080/api/update/userMovies`,\n      options\n    );\n    const data = await response.json();\n    console.log(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfunction UserLikedMovies() {\n  const dispatch = useDispatch();\n  const user = useSelector((store) => store.user.user);\n  const movieIdArray = user.likedMovies;\n  const params = useParams();\n  const userId = params.id;\n  //   console.log(user);\n  const [userMovieinfoArray, setUserMovieinfoArray] = useState([]);\n  const getLikedMoviesCall = async (movieIdArray) => {\n    const array = [];\n    await Promise.all(\n      movieIdArray.map(async (id) => {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${id}?api_key=4503e42f5762f850ada999d307bfc5f9&language=en-US`\n        );\n        const data = await response.json();\n        array.push(data);\n      })\n    );\n    setUserMovieinfoArray(array);\n  };\n\n  const clickHandler = (likedMovieId) => {\n    dispatch(removeUserMovie(String(likedMovieId)));\n  };\n\n  useEffect(() => {\n    getLikedMoviesCall(movieIdArray);\n    updateUserMoviesDb(user);\n  }, [user]);\n\n  return (\n    <div>\n      <h3 className=\"container-title\">{user.username}s liked movies</h3>\n      <div className=\"movies-container\">\n        {userMovieinfoArray.length > -1 &&\n          userMovieinfoArray.map((movie) => (\n            <div className=\"movie-card\" key={movie.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt=\"movie poster\"\n              />\n              <div className=\"movie-card-text-overlay\">\n                <h4>{movie.title}</h4>\n                <button\n                  onClick={() => {\n                    clickHandler(movie.id);\n                  }}\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default UserLikedMovies;\n","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/UserLikedShows.jsx",["175","176"],[],"import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { removeUserShow } from \"../features/user/userSlice\";\n\nexport const updateUserShowsDb = async (userInfo) => {\n  try {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": userInfo.accessToken,\n      },\n      body: JSON.stringify({ userInfo }),\n    };\n\n    const response = await fetch(\n      `http://127.0.0.1:8080/api/update/userShows`,\n      options\n    );\n    const data = await response.json();\n    console.log(data);\n  } catch (err) {}\n};\n\nfunction UserLikedShows() {\n  const dispatch = useDispatch();\n  const user = useSelector((store) => store.user.user);\n  const showIdArray = user.likedTvShows;\n  const params = useParams();\n  const userId = params.id;\n  //   console.log(user);\n  const [userShowinfoArray, setUserShowinfoArray] = useState([]);\n  const getLikedMoviesCall = async (showIdArray) => {\n    const array = [];\n    await Promise.all(\n      showIdArray.map(async (id) => {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/tv/${id}?api_key=4503e42f5762f850ada999d307bfc5f9&language=en-US`\n        );\n        const data = await response.json();\n        array.push(data);\n      })\n    );\n    setUserShowinfoArray(array);\n  };\n\n  const clickHandler = (likedShowId) => {\n    dispatch(removeUserShow(String(likedShowId)));\n  };\n\n  useEffect(() => {\n    getLikedMoviesCall(showIdArray);\n    updateUserShowsDb(user);\n  }, [user]);\n\n  return (\n    <div>\n      <h3 className=\"container-title\">{user.username}s liked shows</h3>\n      <div className=\"movies-container\">\n        {userShowinfoArray.length > -1 &&\n          userShowinfoArray.map((show) => (\n            <div className=\"movie-card\" key={show.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${show.poster_path}`}\n                alt=\"movie poster\"\n              />\n              <div className=\"movie-card-text-overlay\">\n                {/* <p>{movie.overview}</p> */}\n                <h4>{show.name}</h4>\n\n                <button\n                  onClick={() => {\n                    clickHandler(show.id);\n                  }}\n                >\n                  Remove\n                </button>\n\n                {/* <div className=\"movie-card-overlay-btns\">\n                <div>More</div>\n                <div\n                  onClick={() => {\n                    updateUserMoviesDb(user);\n                    clickHandler(String(movie.id), user);\n                  }}\n                >\n                  Like\n                </div>\n              </div> */}\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default UserLikedShows;\n","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/MovieModal.jsx",["177","178","179"],[],"import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { updateUserMoviesDb } from \"./FeaturedMovies\";\nimport { updateUserMovies } from \"../features/user/userSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function ScrollDialog(props) {\n  const dispatch = useDispatch();\n  const item = props.item;\n  const user = props.user;\n  console.log(item);\n  const [open, setOpen] = React.useState(false);\n  const [scroll, setScroll] = React.useState(\"paper\");\n\n  const handleClickOpen = (scrollType) => () => {\n    setOpen(true);\n    setScroll(scrollType);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open]);\n\n  const clickHandler = (likedMovieId, currentUser) => {\n    dispatch(updateUserMovies(likedMovieId));\n  };\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen(\"paper\")}>More</Button>\n      {/* <Button onClick={handleClickOpen(\"body\")}>scroll=body</Button> */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\">{item.title}</DialogTitle>\n        <DialogContent dividers={scroll === \"paper\"}>\n          <img src={`https://image.tmdb.org/t/p/w200/${item.poster_path}`} />\n          <p>Release Date: {item.release_date}</p>\n          <p>Rating: {item.vote_average}</p>\n          <h4>Overview</h4>\n          <p>{item.overview}</p>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button\n            onClick={() => {\n              handleClose();\n              clickHandler(String(item.id), user);\n              updateUserMoviesDb(user);\n            }}\n          >\n            Like\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/ShowModal.jsx",["180","181","182"],[],"/Users/mitchelleglon/Portfolio/movie-app/client/src/components/PopularMovies.jsx",["183"],[],"import React, { useEffect, useState } from \"react\";\nimport { updateUserMovies } from \"../features/user/userSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ScrollDialog from \"./MovieModal\";\n\nexport const updateUserMoviesDb = async (userInfo) => {\n  // const userId = userInfo.id;\n  // console.log(userInfo.accessToken);\n\n  try {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": userInfo.accessToken,\n      },\n      body: JSON.stringify({ userInfo }),\n    };\n\n    const response = await fetch(\n      `http://127.0.0.1:8080/api/update/userMovies`,\n      options\n    );\n    const data = await response.json();\n    console.log(data);\n  } catch (err) {}\n};\n\nfunction PopularMovies() {\n  const dispatch = useDispatch();\n  //   const MOVIE_ENDPOINT = process.env;\n  const [movies, setMovies] = useState([]);\n  const user = useSelector((store) => store.user.user);\n\n  const getMovies = async () => {\n    let rand = Math.floor(Math.random() * 10 + 1);\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/movie/popular?api_key=4503e42f5762f850ada999d307bfc5f9&page=1`\n      );\n      const data = await response.json();\n      console.log(data.results);\n      setMovies(data.results);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const clickHandler = (likedMovieId, currentUser) => {\n    dispatch(updateUserMovies(likedMovieId));\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  return (\n    <div className=\"featured-movie-section\">\n      <h2>Popular Movies</h2>\n      <div className=\"movies-container\">\n        {movies &&\n          movies.map((movie) => (\n            <div className=\"movie-card\" key={movie.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n                alt=\"movie poster\"\n              />\n              <div className=\"movie-card-text-overlay\">\n                {/* <p>{movie.overview}</p> */}\n                <h4>{movie.title}</h4>\n\n                <div className=\"movie-card-overlay-btns\">\n                  <ScrollDialog item={movie} user={user} />\n                  <div\n                    onClick={() => {\n                      updateUserMoviesDb(user);\n                      clickHandler(String(movie.id), user);\n                    }}\n                  >\n                    Like\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PopularMovies;\n","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/TopRatedMovies.jsx",["184"],[],"import React, { useEffect, useState } from \"react\";\nimport { updateUserMovies } from \"../features/user/userSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ScrollDialog from \"./MovieModal\";\n\nexport const updateUserMoviesDb = async (userInfo) => {\n  // const userId = userInfo.id;\n  // console.log(userInfo.accessToken);\n\n  try {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": userInfo.accessToken,\n      },\n      body: JSON.stringify({ userInfo }),\n    };\n\n    const response = await fetch(\n      `http://127.0.0.1:8080/api/update/userMovies`,\n      options\n    );\n    const data = await response.json();\n    console.log(data);\n  } catch (err) {}\n};\n\nfunction TopRatedMovies() {\n  const dispatch = useDispatch();\n  //   const MOVIE_ENDPOINT = process.env;\n  const [movies, setMovies] = useState([]);\n  const user = useSelector((store) => store.user.user);\n\n  const getMovies = async () => {\n    let rand = Math.floor(Math.random() * 10 + 1);\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/movie/top_rated?api_key=4503e42f5762f850ada999d307bfc5f9&page=1`\n      );\n      const data = await response.json();\n      console.log(data.results);\n      setMovies(data.results);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const clickHandler = (likedMovieId, currentUser) => {\n    dispatch(updateUserMovies(likedMovieId));\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  return (\n    <div className=\"featured-movie-section\">\n      <h2>Top Rated Movies</h2>\n      <div className=\"movies-container\">\n        {movies &&\n          movies.map((movie) => (\n            <div className=\"movie-card\" key={movie.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n                alt={`${movie.title}`}\n              />\n              <div className=\"movie-card-text-overlay\">\n                {/* <p>{movie.overview}</p> */}\n                <h4>{movie.title}</h4>\n\n                <div className=\"movie-card-overlay-btns\">\n                  <ScrollDialog item={movie} user={user} />\n                  <div\n                    onClick={() => {\n                      updateUserMoviesDb(user);\n                      clickHandler(String(movie.id), user);\n                    }}\n                  >\n                    Like\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default TopRatedMovies;\n","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/PopularSeries.jsx",["185"],[],"// Copyright 2022 mitchelleglon\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport React, { useEffect, useState } from \"react\";\nimport { updateUserShows } from \"../features/user/userSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ScrollDialog from \"./ShowModal\";\n\nexport const updateUserShowsDb = async (userInfo) => {\n  // const userId = userInfo.id;\n  // console.log(userInfo.accessToken);\n\n  try {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": userInfo.accessToken,\n      },\n      body: JSON.stringify({ userInfo }),\n    };\n\n    const response = await fetch(\n      `http://127.0.0.1:8080/api/update/userShows`,\n      options\n    );\n    const data = await response.json();\n    console.log(data);\n  } catch (err) {}\n};\n\nfunction FeaturedSeries() {\n  const dispatch = useDispatch();\n  const TV_ENDPOINT = process.env.TV_ENDPOINT;\n  const [series, setSeries] = useState([]);\n  const user = useSelector((store) => store.user.user);\n\n  const getSeries = async () => {\n    let rand = Math.floor(Math.random() * 10 + 1);\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/tv/popular?api_key=4503e42f5762f850ada999d307bfc5f9&page=${rand}`\n      );\n      const data = await response.json();\n      console.log(data.page);\n      console.log(data.results);\n      setSeries(data.results);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const clickHandler = (likedShowId, currentUser) => {\n    dispatch(updateUserShows(likedShowId));\n  };\n\n  useEffect(() => {\n    getSeries();\n  }, []);\n\n  return (\n    <div className=\"featured-movie-section\">\n      <h2>Popular TV Shows</h2>\n      <div className=\"movies-container\">\n        {series &&\n          series.map((show) => (\n            <div className=\"movie-card\" key={show.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${show.poster_path}`}\n                alt=\"movie poster\"\n              />\n              <div className=\"movie-card-text-overlay\">\n                {/* <p>{movie.overview}</p> */}\n                <h4>{show.name}</h4>\n\n                <div className=\"movie-card-overlay-btns\">\n                  <ScrollDialog item={show} user={user} />\n                  <div\n                    onClick={() => {\n                      updateUserShowsDb(user);\n                      clickHandler(String(show.id), user);\n                    }}\n                  >\n                    Like\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FeaturedSeries;\n","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/TopRatedSeries.jsx",["186"],[],"// Copyright 2022 mitchelleglon\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport React, { useEffect, useState } from \"react\";\nimport { updateUserShows } from \"../features/user/userSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ScrollDialog from \"./ShowModal\";\n\nexport const updateUserShowsDb = async (userInfo) => {\n  // const userId = userInfo.id;\n  // console.log(userInfo.accessToken);\n\n  try {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": userInfo.accessToken,\n      },\n      body: JSON.stringify({ userInfo }),\n    };\n\n    const response = await fetch(\n      `http://127.0.0.1:8080/api/update/userShows`,\n      options\n    );\n    const data = await response.json();\n    console.log(data);\n  } catch (err) {}\n};\n\nfunction FeaturedSeries() {\n  const dispatch = useDispatch();\n  const TV_ENDPOINT = process.env.TV_ENDPOINT;\n  const [series, setSeries] = useState([]);\n  const user = useSelector((store) => store.user.user);\n\n  const getSeries = async () => {\n    let rand = Math.floor(Math.random() * 10 + 1);\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/tv/top_rated?api_key=4503e42f5762f850ada999d307bfc5f9&page=${rand}`\n      );\n      const data = await response.json();\n      console.log(data.page);\n      console.log(data.results);\n      setSeries(data.results);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const clickHandler = (likedShowId, currentUser) => {\n    dispatch(updateUserShows(likedShowId));\n  };\n\n  useEffect(() => {\n    getSeries();\n  }, []);\n\n  return (\n    <div className=\"featured-movie-section\">\n      <h2>Top Rated TV Shows</h2>\n      <div className=\"movies-container\">\n        {series &&\n          series.map((show) => (\n            <div className=\"movie-card\" key={show.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${show.poster_path}`}\n                alt=\"movie poster\"\n              />\n              <div className=\"movie-card-text-overlay\">\n                {/* <p>{movie.overview}</p> */}\n                <h4>{show.name}</h4>\n\n                <div className=\"movie-card-overlay-btns\">\n                  <ScrollDialog item={show} user={user} />\n                  <div\n                    onClick={() => {\n                      updateUserShowsDb(user);\n                      clickHandler(String(show.id), user);\n                    }}\n                  >\n                    Like\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FeaturedSeries;\n","/Users/mitchelleglon/Portfolio/movie-app/client/src/components/Search.jsx",["187","188","189"],[],{"ruleId":"190","severity":1,"message":"191","line":2,"column":8,"nodeType":"192","messageId":"193","endLine":2,"endColumn":12},{"ruleId":"190","severity":1,"message":"194","line":3,"column":10,"nodeType":"192","messageId":"193","endLine":3,"endColumn":17},{"ruleId":"190","severity":1,"message":"195","line":5,"column":3,"nodeType":"192","messageId":"193","endLine":5,"endColumn":15},{"ruleId":"190","severity":1,"message":"196","line":20,"column":23,"nodeType":"192","messageId":"193","endLine":20,"endColumn":34},{"ruleId":"197","severity":1,"message":"198","line":27,"column":6,"nodeType":"199","endLine":27,"endColumn":8,"suggestions":"200"},{"ruleId":"190","severity":1,"message":"201","line":23,"column":9,"nodeType":"192","messageId":"193","endLine":23,"endColumn":13},{"ruleId":"190","severity":1,"message":"202","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":15},{"ruleId":"190","severity":1,"message":"203","line":76,"column":8,"nodeType":"192","messageId":"193","endLine":76,"endColumn":14},{"ruleId":"190","severity":1,"message":"204","line":86,"column":7,"nodeType":"192","messageId":"193","endLine":86,"endColumn":12},{"ruleId":"190","severity":1,"message":"205","line":87,"column":7,"nodeType":"192","messageId":"193","endLine":87,"endColumn":15},{"ruleId":"190","severity":1,"message":"206","line":44,"column":9,"nodeType":"192","messageId":"193","endLine":44,"endColumn":20},{"ruleId":"190","severity":1,"message":"207","line":34,"column":9,"nodeType":"192","messageId":"193","endLine":34,"endColumn":15},{"ruleId":"197","severity":1,"message":"208","line":58,"column":6,"nodeType":"199","endLine":58,"endColumn":12,"suggestions":"209"},{"ruleId":"190","severity":1,"message":"207","line":32,"column":9,"nodeType":"192","messageId":"193","endLine":32,"endColumn":15},{"ruleId":"197","severity":1,"message":"210","line":56,"column":6,"nodeType":"199","endLine":56,"endColumn":12,"suggestions":"211"},{"ruleId":"190","severity":1,"message":"212","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":25},{"ruleId":"190","severity":1,"message":"213","line":10,"column":10,"nodeType":"192","messageId":"193","endLine":10,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":56,"column":11,"nodeType":"216","endLine":56,"endColumn":78},{"ruleId":"190","severity":1,"message":"212","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":25},{"ruleId":"190","severity":1,"message":"213","line":10,"column":10,"nodeType":"192","messageId":"193","endLine":10,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":56,"column":11,"nodeType":"216","endLine":56,"endColumn":78},{"ruleId":"190","severity":1,"message":"217","line":36,"column":9,"nodeType":"192","messageId":"193","endLine":36,"endColumn":13},{"ruleId":"190","severity":1,"message":"217","line":36,"column":9,"nodeType":"192","messageId":"193","endLine":36,"endColumn":13},{"ruleId":"190","severity":1,"message":"206","line":44,"column":9,"nodeType":"192","messageId":"193","endLine":44,"endColumn":20},{"ruleId":"190","severity":1,"message":"206","line":44,"column":9,"nodeType":"192","messageId":"193","endLine":44,"endColumn":20},{"ruleId":"190","severity":1,"message":"196","line":2,"column":23,"nodeType":"192","messageId":"193","endLine":2,"endColumn":34},{"ruleId":"190","severity":1,"message":"218","line":17,"column":13,"nodeType":"192","messageId":"193","endLine":17,"endColumn":20},{"ruleId":"197","severity":1,"message":"219","line":87,"column":6,"nodeType":"199","endLine":87,"endColumn":45,"suggestions":"220"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Counter' is defined but never used.","'persistStore' is defined but never used.","'useDispatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["221"],"'user' is assigned a value but never used.","'storage' is defined but never used.","'Avatar' is defined but never used.","'pages' is assigned a value but never used.","'settings' is assigned a value but never used.","'TV_ENDPOINT' is assigned a value but never used.","'userId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'movieIdArray'. Either include it or remove the dependency array.",["222"],"React Hook useEffect has a missing dependency: 'showIdArray'. Either include it or remove the dependency array.",["223"],"'DialogContentText' is defined but never used.","'useSelector' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'rand' is assigned a value but never used.","'options' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'user.likedMovies' and 'user.likedTvShows'. Either include them or remove the dependency array.",["224"],{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [user]",{"range":"233","text":"234"},"Update the dependencies array to be: [movieIdArray, user]",{"range":"235","text":"236"},"Update the dependencies array to be: [showIdArray, user]",{"range":"237","text":"238"},"Update the dependencies array to be: [searchedUserMovies, searchedUserShows, user.likedMovies, user.likedTvShows]",{"range":"239","text":"240"},[1102,1104],"[user]",[1666,1672],"[movieIdArray, user]",[1624,1630],"[showIdArray, user]",[2718,2757],"[searchedUserMovies, searchedUserShows, user.likedMovies, user.likedTvShows]"]