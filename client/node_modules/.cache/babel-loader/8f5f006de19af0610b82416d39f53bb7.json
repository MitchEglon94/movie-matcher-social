{"ast":null,"code":"var _jsxFileName = \"/Users/mitchelleglon/Portfolio/movie-app/client/src/components/UserLikedShows.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserLikedShows() {\n  _s();\n\n  const user = useSelector(store => store.user.user);\n  const showIdArray = user.likedTvShows;\n  const params = useParams();\n  const userId = params.id; //   console.log(user);\n\n  const [userShowinfoArray, setUserShowinfoArray] = useState([]);\n\n  const getLikedMoviesCall = async showIdArray => {\n    const array = [];\n    await Promise.all(showIdArray.map(async id => {\n      const response = await fetch(`https://api.themoviedb.org/3/tv/${id}?api_key=4503e42f5762f850ada999d307bfc5f9&language=en-US`);\n      const data = await response.json();\n      array.push(data);\n    }));\n    setUserShowinfoArray(array);\n  };\n\n  useEffect(() => {\n    getLikedMoviesCall(showIdArray);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"container-title\",\n      children: [user.username, \"s liked shows\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: userShowinfoArray.length > -1 && userShowinfoArray.map(show => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500/${show.poster_path}`,\n          alt: \"movie poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card-text-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: show.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, show.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserLikedShows, \"b+t5+VwdsCHVYz9CHTLq97uyoj0=\", false, function () {\n  return [useSelector, useParams];\n});\n\n_c = UserLikedShows;\nexport default UserLikedShows;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLikedShows\");","map":{"version":3,"names":["React","useState","useParams","useSelector","useDispatch","useEffect","UserLikedShows","user","store","showIdArray","likedTvShows","params","userId","id","userShowinfoArray","setUserShowinfoArray","getLikedMoviesCall","array","Promise","all","map","response","fetch","data","json","push","username","length","show","poster_path","title"],"sources":["/Users/mitchelleglon/Portfolio/movie-app/client/src/components/UserLikedShows.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nfunction UserLikedShows() {\n  const user = useSelector((store) => store.user.user);\n  const showIdArray = user.likedTvShows;\n  const params = useParams();\n  const userId = params.id;\n  //   console.log(user);\n  const [userShowinfoArray, setUserShowinfoArray] = useState([]);\n  const getLikedMoviesCall = async (showIdArray) => {\n    const array = [];\n    await Promise.all(\n      showIdArray.map(async (id) => {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/tv/${id}?api_key=4503e42f5762f850ada999d307bfc5f9&language=en-US`\n        );\n        const data = await response.json();\n        array.push(data);\n      })\n    );\n    setUserShowinfoArray(array);\n  };\n\n  useEffect(() => {\n    getLikedMoviesCall(showIdArray);\n  }, []);\n\n  return (\n    <div>\n      <h3 className=\"container-title\">{user.username}s liked shows</h3>\n      <div className=\"movies-container\">\n        {userShowinfoArray.length > -1 &&\n          userShowinfoArray.map((show) => (\n            <div className=\"movie-card\" key={show.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${show.poster_path}`}\n                alt=\"movie poster\"\n              />\n              <div className=\"movie-card-text-overlay\">\n                {/* <p>{movie.overview}</p> */}\n                <h4>{show.title}</h4>\n\n                {/* <div className=\"movie-card-overlay-btns\">\n                <div>More</div>\n                <div\n                  onClick={() => {\n                    updateUserMoviesDb(user);\n                    clickHandler(String(movie.id), user);\n                  }}\n                >\n                  Like\n                </div>\n              </div> */}\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default UserLikedShows;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,SAASC,cAAT,GAA0B;EAAA;;EACxB,MAAMC,IAAI,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,IAAN,CAAWA,IAAvB,CAAxB;EACA,MAAME,WAAW,GAAGF,IAAI,CAACG,YAAzB;EACA,MAAMC,MAAM,GAAGT,SAAS,EAAxB;EACA,MAAMU,MAAM,GAAGD,MAAM,CAACE,EAAtB,CAJwB,CAKxB;;EACA,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,CAAC,EAAD,CAA1D;;EACA,MAAMe,kBAAkB,GAAG,MAAOP,WAAP,IAAuB;IAChD,MAAMQ,KAAK,GAAG,EAAd;IACA,MAAMC,OAAO,CAACC,GAAR,CACJV,WAAW,CAACW,GAAZ,CAAgB,MAAOP,EAAP,IAAc;MAC5B,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CACzB,mCAAkCT,EAAG,0DADZ,CAA5B;MAGA,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACAP,KAAK,CAACQ,IAAN,CAAWF,IAAX;IACD,CAND,CADI,CAAN;IASAR,oBAAoB,CAACE,KAAD,CAApB;EACD,CAZD;;EAcAZ,SAAS,CAAC,MAAM;IACdW,kBAAkB,CAACP,WAAD,CAAlB;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,iBAAd;MAAA,WAAiCF,IAAI,CAACmB,QAAtC;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,kBAAf;MAAA,UACGZ,iBAAiB,CAACa,MAAlB,GAA2B,CAAC,CAA5B,IACCb,iBAAiB,CAACM,GAAlB,CAAuBQ,IAAD,iBACpB;QAAK,SAAS,EAAC,YAAf;QAAA,wBACE;UACE,GAAG,EAAG,mCAAkCA,IAAI,CAACC,WAAY,EAD3D;UAEE,GAAG,EAAC;QAFN;UAAA;UAAA;UAAA;QAAA,QADF,eAKE;UAAK,SAAS,EAAC,yBAAf;UAAA,uBAEE;YAAA,UAAKD,IAAI,CAACE;UAAV;YAAA;YAAA;YAAA;UAAA;QAFF;UAAA;UAAA;UAAA;QAAA,QALF;MAAA,GAAiCF,IAAI,CAACf,EAAtC;QAAA;QAAA;QAAA;MAAA,QADF;IAFJ;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD;;GAzDQP,c;UACMH,W,EAEED,S;;;KAHRI,c;AA2DT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}