{"ast":null,"code":"var _jsxFileName = \"/Users/mitchelleglon/Portfolio/movie-app/client/src/components/FeaturedMovies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { updateUserMovies } from \"../features/user/userSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeaturedMovies() {\n  _s();\n\n  const dispatch = useDispatch(); //   const MOVIE_ENDPOINT = process.env;\n\n  const [movies, setMovies] = useState([]);\n  const user = useSelector(store => store.user.user);\n\n  const getMovies = async () => {\n    let rand = Math.floor(Math.random() * 10 + 1);\n\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=4503e42f5762f850ada999d307bfc5f9&page=${rand}`);\n      const data = await response.json();\n      console.log(data.results);\n      setMovies(data.results);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const updateUserMoviesDb = async userInfo => {\n    const userId = userInfo.id;\n    console.log(userInfo.accessToken);\n\n    try {\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": userInfo.accessToken\n        },\n        body: JSON.stringify({\n          userInfo\n        })\n      };\n      const response = await fetch(`http://127.0.0.1:8080/api/update/user`, options);\n      const data = await response.json();\n      console.log(data);\n    } catch (err) {}\n  };\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  const clickHandler = (likedMovieId, currentUser) => {\n    dispatch(updateUserMovies(likedMovieId));\n    updateUserMoviesDb(user); // dispatch(\n    //   updateUserMovies({\n    //     username: currentUser.username,\n    //     token: currentUser.accessToken,\n    //   })\n    // );\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"featured-movie-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Featured Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: movies && movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n          alt: \"movie poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card-text-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-card-overlay-btns\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"More\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => clickHandler(movie.id, user),\n              children: \"Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FeaturedMovies, \"+i8n/HO/AGjqu4ltNTkMCe5Ovr8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FeaturedMovies;\nexport default FeaturedMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeaturedMovies\");","map":{"version":3,"names":["React","useEffect","useState","updateUserMovies","useSelector","useDispatch","FeaturedMovies","dispatch","movies","setMovies","user","store","getMovies","rand","Math","floor","random","response","fetch","data","json","console","log","results","err","updateUserMoviesDb","userInfo","userId","id","accessToken","options","method","headers","body","JSON","stringify","clickHandler","likedMovieId","currentUser","map","movie","poster_path","title"],"sources":["/Users/mitchelleglon/Portfolio/movie-app/client/src/components/FeaturedMovies.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { updateUserMovies } from \"../features/user/userSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction FeaturedMovies() {\n  const dispatch = useDispatch();\n  //   const MOVIE_ENDPOINT = process.env;\n  const [movies, setMovies] = useState([]);\n  const user = useSelector((store) => store.user.user);\n\n  const getMovies = async () => {\n    let rand = Math.floor(Math.random() * 10 + 1);\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/trending/movie/day?api_key=4503e42f5762f850ada999d307bfc5f9&page=${rand}`\n      );\n      const data = await response.json();\n      console.log(data.results);\n      setMovies(data.results);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const updateUserMoviesDb = async (userInfo) => {\n    const userId = userInfo.id;\n    console.log(userInfo.accessToken);\n\n    try {\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": userInfo.accessToken,\n        },\n        body: JSON.stringify({ userInfo }),\n      };\n\n      const response = await fetch(\n        `http://127.0.0.1:8080/api/update/user`,\n        options\n      );\n      const data = await response.json();\n      console.log(data);\n    } catch (err) {}\n  };\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  const clickHandler = (likedMovieId, currentUser) => {\n    dispatch(updateUserMovies(likedMovieId));\n    updateUserMoviesDb(user);\n    // dispatch(\n    //   updateUserMovies({\n    //     username: currentUser.username,\n    //     token: currentUser.accessToken,\n    //   })\n    // );\n  };\n\n  return (\n    <div className=\"featured-movie-section\">\n      <h2>Featured Movies</h2>\n      <div className=\"movies-container\">\n        {movies &&\n          movies.map((movie) => (\n            <div className=\"movie-card\" key={movie.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt=\"movie poster\"\n              />\n              <div className=\"movie-card-text-overlay\">\n                {/* <p>{movie.overview}</p> */}\n                <h4>{movie.title}</h4>\n\n                <div className=\"movie-card-overlay-btns\">\n                  <div>More</div>\n                  <div onClick={() => clickHandler(movie.id, user)}>Like</div>\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FeaturedMovies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}