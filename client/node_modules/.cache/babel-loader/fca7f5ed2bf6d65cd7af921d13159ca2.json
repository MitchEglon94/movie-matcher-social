{"ast":null,"code":"var _jsxFileName = \"/Users/mitchelleglon/Portfolio/movie-app/client/src/components/PopularSeries.jsx\",\n    _s = $RefreshSig$();\n\n// Copyright 2022 mitchelleglon\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport React, { useEffect, useState } from \"react\";\nimport { updateUserShows } from \"../features/user/userSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ScrollDialog from \"./ShowModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const updateUserShowsDb = async userInfo => {\n  // const userId = userInfo.id;\n  // console.log(userInfo.accessToken);\n  try {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": userInfo.accessToken\n      },\n      body: JSON.stringify({\n        userInfo\n      })\n    };\n    const response = await fetch(`http://127.0.0.1:8080/api/update/userShows`, options);\n    const data = await response.json();\n    console.log(data);\n  } catch (err) {}\n};\n\nfunction FeaturedSeries() {\n  _s();\n\n  const dispatch = useDispatch();\n  const TV_ENDPOINT = process.env.TV_ENDPOINT;\n  const [series, setSeries] = useState([]);\n  const user = useSelector(store => store.user.user);\n\n  const getSeries = async () => {\n    let rand = Math.floor(Math.random() * 10 + 1);\n\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/tv/popular?api_key=4503e42f5762f850ada999d307bfc5f9&page=${rand}`);\n      const data = await response.json();\n      console.log(data.page);\n      console.log(data.results);\n      setSeries(data.results);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const clickHandler = (likedShowId, currentUser) => {\n    dispatch(updateUserShows(likedShowId));\n  };\n\n  useEffect(() => {\n    getSeries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"featured-movie-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Featured TV Shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: series && series.map(show => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w200/${show.poster_path}`,\n          alt: \"movie poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card-text-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: show.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-card-overlay-btns\",\n            children: [/*#__PURE__*/_jsxDEV(ScrollDialog, {\n              item: show,\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                updateUserShowsDb(user);\n                clickHandler(String(show.id), user);\n              },\n              children: \"Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, show.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FeaturedSeries, \"P6QrygLv07Qg/vouGuWI+adt4Uc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FeaturedSeries;\nexport default FeaturedSeries;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeaturedSeries\");","map":{"version":3,"names":["React","useEffect","useState","updateUserShows","useSelector","useDispatch","ScrollDialog","updateUserShowsDb","userInfo","options","method","headers","accessToken","body","JSON","stringify","response","fetch","data","json","console","log","err","FeaturedSeries","dispatch","TV_ENDPOINT","process","env","series","setSeries","user","store","getSeries","rand","Math","floor","random","page","results","clickHandler","likedShowId","currentUser","map","show","poster_path","name","String","id"],"sources":["/Users/mitchelleglon/Portfolio/movie-app/client/src/components/PopularSeries.jsx"],"sourcesContent":["// Copyright 2022 mitchelleglon\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport React, { useEffect, useState } from \"react\";\nimport { updateUserShows } from \"../features/user/userSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ScrollDialog from \"./ShowModal\";\n\nexport const updateUserShowsDb = async (userInfo) => {\n  // const userId = userInfo.id;\n  // console.log(userInfo.accessToken);\n\n  try {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": userInfo.accessToken,\n      },\n      body: JSON.stringify({ userInfo }),\n    };\n\n    const response = await fetch(\n      `http://127.0.0.1:8080/api/update/userShows`,\n      options\n    );\n    const data = await response.json();\n    console.log(data);\n  } catch (err) {}\n};\n\nfunction FeaturedSeries() {\n  const dispatch = useDispatch();\n  const TV_ENDPOINT = process.env.TV_ENDPOINT;\n  const [series, setSeries] = useState([]);\n  const user = useSelector((store) => store.user.user);\n\n  const getSeries = async () => {\n    let rand = Math.floor(Math.random() * 10 + 1);\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/tv/popular?api_key=4503e42f5762f850ada999d307bfc5f9&page=${rand}`\n      );\n      const data = await response.json();\n      console.log(data.page);\n      console.log(data.results);\n      setSeries(data.results);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const clickHandler = (likedShowId, currentUser) => {\n    dispatch(updateUserShows(likedShowId));\n  };\n\n  useEffect(() => {\n    getSeries();\n  }, []);\n\n  return (\n    <div className=\"featured-movie-section\">\n      <h2>Featured TV Shows</h2>\n      <div className=\"movies-container\">\n        {series &&\n          series.map((show) => (\n            <div className=\"movie-card\" key={show.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${show.poster_path}`}\n                alt=\"movie poster\"\n              />\n              <div className=\"movie-card-text-overlay\">\n                {/* <p>{movie.overview}</p> */}\n                <h4>{show.name}</h4>\n\n                <div className=\"movie-card-overlay-btns\">\n                  <ScrollDialog item={show} user={user} />\n                  <div\n                    onClick={() => {\n                      updateUserShowsDb(user);\n                      clickHandler(String(show.id), user);\n                    }}\n                  >\n                    Like\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FeaturedSeries;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}