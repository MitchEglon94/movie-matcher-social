{"ast":null,"code":"var _jsxFileName = \"/Users/mitchelleglon/Portfolio/movie-app/client/src/pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\"; // import { login } from \"../slices/auth\";\n// import { clearMessage } from \"../slices/message\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [loading, setLoading] = useState(false); //   const { isLoggedIn } = useSelector((state) => state.auth);\n  //   const { message } = useSelector((state) => state.message);\n  //   const dispatch = useDispatch();\n  // //   useEffect(() => {\n  // //     dispatch(clearMessage());\n  // //   }, [dispatch]);\n\n  const initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"This field is required!\"),\n    password: Yup.string().required(\"This field is required!\")\n  }); //   const handleLogin = (formValue) => {\n  //     const { username, password } = formValue;\n  //     setLoading(true);\n  //     dispatch(login({ username, password }))\n  //       .unwrap()\n  //       .then(() => {\n  //         props.history.push(\"/profile\");\n  //         window.location.reload();\n  //       })\n  //       .catch(() => {\n  //         setLoading(false);\n  //       });\n  //   };\n  //   if (isLoggedIn) {\n  //     return <Navigate to=\"/profile\" />;\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12 login-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n        alt: \"profile-img\",\n        className: \"profile-img-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: \"\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"username\",\n              type: \"text\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"username\",\n              component: \"div\",\n              className: \"alert alert-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"password\",\n              type: \"password\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"alert alert-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary btn-block\",\n              disabled: loading,\n              children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Navigate","Formik","Field","Form","ErrorMessage","Yup","Login","props","loading","setLoading","initialValues","username","password","validationSchema","object","shape","string","required"],"sources":["/Users/mitchelleglon/Portfolio/movie-app/client/src/pages/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n// import { login } from \"../slices/auth\";\n// import { clearMessage } from \"../slices/message\";\nconst Login = (props) => {\n  const [loading, setLoading] = useState(false);\n  //   const { isLoggedIn } = useSelector((state) => state.auth);\n  //   const { message } = useSelector((state) => state.message);\n  //   const dispatch = useDispatch();\n  // //   useEffect(() => {\n  // //     dispatch(clearMessage());\n  // //   }, [dispatch]);\n  const initialValues = {\n    username: \"\",\n    password: \"\",\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"This field is required!\"),\n    password: Yup.string().required(\"This field is required!\"),\n  });\n  //   const handleLogin = (formValue) => {\n  //     const { username, password } = formValue;\n  //     setLoading(true);\n  //     dispatch(login({ username, password }))\n  //       .unwrap()\n  //       .then(() => {\n  //         props.history.push(\"/profile\");\n  //         window.location.reload();\n  //       })\n  //       .catch(() => {\n  //         setLoading(false);\n  //       });\n  //   };\n  //   if (isLoggedIn) {\n  //     return <Navigate to=\"/profile\" />;\n  //   }\n  return (\n    <div className=\"col-md-12 login-form\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={\"\"}\n        >\n          <Form>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Field name=\"username\" type=\"text\" className=\"form-control\" />\n              <ErrorMessage\n                name=\"username\"\n                component=\"div\"\n                className=\"alert alert-danger\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Field name=\"password\" type=\"password\" className=\"form-control\" />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className=\"alert alert-danger\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-block\"\n                disabled={loading}\n              >\n                {loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n          </Form>\n        </Formik>\n      </div>\n      {/* {message && (\n        <div className=\"form-group\">\n          <div className=\"alert alert-danger\" role=\"alert\">\n            {message}\n          </div>\n        </div>\n      )} */}\n    </div>\n  );\n};\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}