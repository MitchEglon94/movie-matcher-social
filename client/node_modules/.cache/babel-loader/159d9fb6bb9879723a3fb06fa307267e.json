{"ast":null,"code":"var _jsxFileName = \"/Users/mitchelleglon/Portfolio/movie-app/client/src/components/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const [searchedUserMovies, setSearchedUserMovies] = useState([]);\n  const [searchedUserShows, setSearchedUserShows] = useState([]);\n  const [userMovieinfoArray, setUserMovieinfoArray] = useState([]);\n  const [userShowinfoArray, setUserShowinfoArray] = useState([]);\n  const user = useSelector(store => store.user.user); // console.log(user.likedMovies.indexOf(\"985939\"));\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const clickHandler = async (user, searchedUser) => {\n    // console.log(user.accessToken);\n    try {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": user.accessToken\n        }\n      };\n      const response = await fetch(`http://127.0.0.1:8080/api/search/searchUser/${searchedUser}`);\n      const data = await response.json(); // console.log(data);\n\n      setSearchedUserMovies(data.movies);\n      setSearchedUserShows(data.shows);\n      return data;\n    } catch (err) {\n      console.dir(err);\n    }\n  };\n\n  const getLikedShowsCall = async showIdArray => {\n    const array = [];\n    await Promise.all(showIdArray.map(async id => {\n      const response = await fetch(`https://api.themoviedb.org/3/tv/${id}?api_key=4503e42f5762f850ada999d307bfc5f9&language=en-US`);\n      const data = await response.json(); // console.log(data);\n\n      array.push(data); // console.log(array);\n    }));\n    setUserShowinfoArray(array);\n  };\n\n  const getLikedMoviesCall = async movieIdArray => {\n    const array = [];\n    await Promise.all(movieIdArray.map(async id => {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=4503e42f5762f850ada999d307bfc5f9&language=en-US`);\n      const data = await response.json(); // console.log(data);\n\n      array.push(data);\n    }));\n    setUserMovieinfoArray(array);\n  };\n\n  useEffect(() => {\n    const newMoviesArray = searchedUserMovies.filter(movie => user.likedMovies.includes(movie)); // console.log(newMoviesArray);\n\n    const newShowsArray = searchedUserShows.filter(show => user.likedTvShows.includes(show)); // console.log(newShowsArray);\n\n    getLikedMoviesCall(newMoviesArray);\n    getLikedShowsCall(newShowsArray);\n  }, [searchedUserMovies, searchedUserShows]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Search\", /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Find a user\",\n      onChange: e => {\n        setSearchTerm(e.target.value); // console.log(searchTerm);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => clickHandler(user, searchTerm),\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: userMovieinfoArray.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n          alt: \"movie poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card-text-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: userShowinfoArray.map(show =>\n      /*#__PURE__*/\n      // <div key={show}>{show.name}</div>\n      _jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500/${show.poster_path}`,\n          alt: \"movie poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card-text-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: show.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, show.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"aFko2A5+IwtlbVHmDj1eiSmiw/I=\", false, function () {\n  return [useSelector];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","Search","searchedUserMovies","setSearchedUserMovies","searchedUserShows","setSearchedUserShows","userMovieinfoArray","setUserMovieinfoArray","userShowinfoArray","setUserShowinfoArray","user","store","searchTerm","setSearchTerm","clickHandler","searchedUser","options","method","headers","accessToken","response","fetch","data","json","movies","shows","err","console","dir","getLikedShowsCall","showIdArray","array","Promise","all","map","id","push","getLikedMoviesCall","movieIdArray","newMoviesArray","filter","movie","likedMovies","includes","newShowsArray","show","likedTvShows","e","target","value","poster_path","title","name"],"sources":["/Users/mitchelleglon/Portfolio/movie-app/client/src/components/Search.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction Search() {\n  const [searchedUserMovies, setSearchedUserMovies] = useState([]);\n  const [searchedUserShows, setSearchedUserShows] = useState([]);\n  const [userMovieinfoArray, setUserMovieinfoArray] = useState([]);\n  const [userShowinfoArray, setUserShowinfoArray] = useState([]);\n\n  const user = useSelector((store) => store.user.user);\n  // console.log(user.likedMovies.indexOf(\"985939\"));\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const clickHandler = async (user, searchedUser) => {\n    // console.log(user.accessToken);\n    try {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": user.accessToken,\n        },\n      };\n      const response = await fetch(\n        `http://127.0.0.1:8080/api/search/searchUser/${searchedUser}`\n      );\n      const data = await response.json();\n      // console.log(data);\n      setSearchedUserMovies(data.movies);\n      setSearchedUserShows(data.shows);\n      return data;\n    } catch (err) {\n      console.dir(err);\n    }\n  };\n\n  const getLikedShowsCall = async (showIdArray) => {\n    const array = [];\n    await Promise.all(\n      showIdArray.map(async (id) => {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/tv/${id}?api_key=4503e42f5762f850ada999d307bfc5f9&language=en-US`\n        );\n        const data = await response.json();\n        // console.log(data);\n        array.push(data);\n        // console.log(array);\n      })\n    );\n    setUserShowinfoArray(array);\n  };\n\n  const getLikedMoviesCall = async (movieIdArray) => {\n    const array = [];\n    await Promise.all(\n      movieIdArray.map(async (id) => {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${id}?api_key=4503e42f5762f850ada999d307bfc5f9&language=en-US`\n        );\n        const data = await response.json();\n        // console.log(data);\n\n        array.push(data);\n      })\n    );\n    setUserMovieinfoArray(array);\n  };\n\n  useEffect(() => {\n    const newMoviesArray = searchedUserMovies.filter((movie) =>\n      user.likedMovies.includes(movie)\n    );\n    // console.log(newMoviesArray);\n    const newShowsArray = searchedUserShows.filter((show) =>\n      user.likedTvShows.includes(show)\n    );\n    // console.log(newShowsArray);\n    getLikedMoviesCall(newMoviesArray);\n    getLikedShowsCall(newShowsArray);\n  }, [searchedUserMovies, searchedUserShows]);\n\n  return (\n    <div>\n      Search\n      <input\n        placeholder=\"Find a user\"\n        onChange={(e) => {\n          setSearchTerm(e.target.value);\n          // console.log(searchTerm);\n        }}\n      />\n      <button onClick={() => clickHandler(user, searchTerm)}>Search</button>\n      <div className=\"movies-container\">\n        {userMovieinfoArray.map((movie) => (\n          <div className=\"movie-card\" key={movie.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt=\"movie poster\"\n            />\n            <div className=\"movie-card-text-overlay\">\n              <h4>{movie.title}</h4>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"movies-container\">\n        {userShowinfoArray.map((show) => (\n          // <div key={show}>{show.name}</div>\n          <div className=\"movie-card\" key={show.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${show.poster_path}`}\n              alt=\"movie poster\"\n            />\n            <div className=\"movie-card-text-overlay\">\n              <h4>{show.name}</h4>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EAChB,MAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CL,QAAQ,CAAC,EAAD,CAA5D;EACA,MAAM,CAACM,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,CAAC,EAAD,CAA1D;EACA,MAAM,CAACQ,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,EAAD,CAA5D;EACA,MAAM,CAACU,iBAAD,EAAoBC,oBAApB,IAA4CX,QAAQ,CAAC,EAAD,CAA1D;EAEA,MAAMY,IAAI,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,IAAN,CAAWA,IAAvB,CAAxB,CANgB,CAOhB;;EACA,MAAM,CAACE,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;;EAEA,MAAMgB,YAAY,GAAG,OAAOJ,IAAP,EAAaK,YAAb,KAA8B;IACjD;IACA,IAAI;MACF,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,KADM;QAEdC,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,kBAAkBR,IAAI,CAACS;QAFhB;MAFK,CAAhB;MAOA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,+CAA8CN,YAAa,EADlC,CAA5B;MAGA,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAXE,CAYF;;MACApB,qBAAqB,CAACmB,IAAI,CAACE,MAAN,CAArB;MACAnB,oBAAoB,CAACiB,IAAI,CAACG,KAAN,CAApB;MACA,OAAOH,IAAP;IACD,CAhBD,CAgBE,OAAOI,GAAP,EAAY;MACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD;EACF,CArBD;;EAuBA,MAAMG,iBAAiB,GAAG,MAAOC,WAAP,IAAuB;IAC/C,MAAMC,KAAK,GAAG,EAAd;IACA,MAAMC,OAAO,CAACC,GAAR,CACJH,WAAW,CAACI,GAAZ,CAAgB,MAAOC,EAAP,IAAc;MAC5B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CACzB,mCAAkCc,EAAG,0DADZ,CAA5B;MAGA,MAAMb,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAJ4B,CAK5B;;MACAQ,KAAK,CAACK,IAAN,CAAWd,IAAX,EAN4B,CAO5B;IACD,CARD,CADI,CAAN;IAWAb,oBAAoB,CAACsB,KAAD,CAApB;EACD,CAdD;;EAgBA,MAAMM,kBAAkB,GAAG,MAAOC,YAAP,IAAwB;IACjD,MAAMP,KAAK,GAAG,EAAd;IACA,MAAMC,OAAO,CAACC,GAAR,CACJK,YAAY,CAACJ,GAAb,CAAiB,MAAOC,EAAP,IAAc;MAC7B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CACzB,sCAAqCc,EAAG,0DADf,CAA5B;MAGA,MAAMb,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAJ6B,CAK7B;;MAEAQ,KAAK,CAACK,IAAN,CAAWd,IAAX;IACD,CARD,CADI,CAAN;IAWAf,qBAAqB,CAACwB,KAAD,CAArB;EACD,CAdD;;EAgBAlC,SAAS,CAAC,MAAM;IACd,MAAM0C,cAAc,GAAGrC,kBAAkB,CAACsC,MAAnB,CAA2BC,KAAD,IAC/C/B,IAAI,CAACgC,WAAL,CAAiBC,QAAjB,CAA0BF,KAA1B,CADqB,CAAvB,CADc,CAId;;IACA,MAAMG,aAAa,GAAGxC,iBAAiB,CAACoC,MAAlB,CAA0BK,IAAD,IAC7CnC,IAAI,CAACoC,YAAL,CAAkBH,QAAlB,CAA2BE,IAA3B,CADoB,CAAtB,CALc,CAQd;;IACAR,kBAAkB,CAACE,cAAD,CAAlB;IACAV,iBAAiB,CAACe,aAAD,CAAjB;EACD,CAXQ,EAWN,CAAC1C,kBAAD,EAAqBE,iBAArB,CAXM,CAAT;EAaA,oBACE;IAAA,kCAEE;MACE,WAAW,EAAC,aADd;MAEE,QAAQ,EAAG2C,CAAD,IAAO;QACflC,aAAa,CAACkC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,CADe,CAEf;MACD;IALH;MAAA;MAAA;MAAA;IAAA,QAFF,eASE;MAAQ,OAAO,EAAE,MAAMnC,YAAY,CAACJ,IAAD,EAAOE,UAAP,CAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATF,eAUE;MAAK,SAAS,EAAC,kBAAf;MAAA,UACGN,kBAAkB,CAAC4B,GAAnB,CAAwBO,KAAD,iBACtB;QAAK,SAAS,EAAC,YAAf;QAAA,wBACE;UACE,GAAG,EAAG,mCAAkCA,KAAK,CAACS,WAAY,EAD5D;UAEE,GAAG,EAAC;QAFN;UAAA;UAAA;UAAA;QAAA,QADF,eAKE;UAAK,SAAS,EAAC,yBAAf;UAAA,uBACE;YAAA,UAAKT,KAAK,CAACU;UAAX;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QALF;MAAA,GAAiCV,KAAK,CAACN,EAAvC;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAVF,eAuBE;MAAK,SAAS,EAAC,kBAAf;MAAA,UACG3B,iBAAiB,CAAC0B,GAAlB,CAAuBW,IAAD;MAAA;MACrB;MACA;QAAK,SAAS,EAAC,YAAf;QAAA,wBACE;UACE,GAAG,EAAG,mCAAkCA,IAAI,CAACK,WAAY,EAD3D;UAEE,GAAG,EAAC;QAFN;UAAA;UAAA;UAAA;QAAA,QADF,eAKE;UAAK,SAAS,EAAC,yBAAf;UAAA,uBACE;YAAA,UAAKL,IAAI,CAACO;UAAV;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QALF;MAAA,GAAiCP,IAAI,CAACV,EAAtC;QAAA;QAAA;QAAA;MAAA,QAFD;IADH;MAAA;MAAA;MAAA;IAAA,QAvBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwCD;;GAtHQlC,M;UAMMF,W;;;KANNE,M;AAwHT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}