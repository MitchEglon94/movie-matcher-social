{"ast":null,"code":"var _jsxFileName = \"/Users/mitchelleglon/Portfolio/movie-app/client/src/components/UserLikedMovies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { removeUserMovie } from \"../features/user/userSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserLikedMovies() {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(store => store.user.user);\n  const movieIdArray = user.likedMovies;\n  const params = useParams();\n  const userId = params.id; //   console.log(user);\n\n  const [userMovieinfoArray, setUserMovieinfoArray] = useState([]);\n\n  const getLikedMoviesCall = async movieIdArray => {\n    const array = [];\n    await Promise.all(movieIdArray.map(async id => {\n      const response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=4503e42f5762f850ada999d307bfc5f9&language=en-US`);\n      const data = await response.json();\n      array.push(data);\n    }));\n    setUserMovieinfoArray(array);\n  };\n\n  useEffect(() => {\n    getLikedMoviesCall(movieIdArray);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"container-title\",\n      children: [user.username, \"s liked movies\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: userMovieinfoArray.length > -1 && userMovieinfoArray.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n          alt: \"movie poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card-text-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => dispatch(removeUserMovie(movie.id)),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserLikedMovies, \"b+YdwheESTWzLEO8LUKH+vVAyW0=\", false, function () {\n  return [useDispatch, useSelector, useParams];\n});\n\n_c = UserLikedMovies;\nexport default UserLikedMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLikedMovies\");","map":{"version":3,"names":["React","useState","useParams","useSelector","useDispatch","useEffect","removeUserMovie","UserLikedMovies","dispatch","user","store","movieIdArray","likedMovies","params","userId","id","userMovieinfoArray","setUserMovieinfoArray","getLikedMoviesCall","array","Promise","all","map","response","fetch","data","json","push","username","length","movie","poster_path","title"],"sources":["/Users/mitchelleglon/Portfolio/movie-app/client/src/components/UserLikedMovies.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { removeUserMovie } from \"../features/user/userSlice\";\n\nfunction UserLikedMovies() {\n  const dispatch = useDispatch();\n  const user = useSelector((store) => store.user.user);\n  const movieIdArray = user.likedMovies;\n  const params = useParams();\n  const userId = params.id;\n  //   console.log(user);\n  const [userMovieinfoArray, setUserMovieinfoArray] = useState([]);\n  const getLikedMoviesCall = async (movieIdArray) => {\n    const array = [];\n    await Promise.all(\n      movieIdArray.map(async (id) => {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${id}?api_key=4503e42f5762f850ada999d307bfc5f9&language=en-US`\n        );\n        const data = await response.json();\n        array.push(data);\n      })\n    );\n    setUserMovieinfoArray(array);\n  };\n\n  useEffect(() => {\n    getLikedMoviesCall(movieIdArray);\n  }, []);\n\n  return (\n    <div>\n      <h3 className=\"container-title\">{user.username}s liked movies</h3>\n      <div className=\"movies-container\">\n        {userMovieinfoArray.length > -1 &&\n          userMovieinfoArray.map((movie) => (\n            <div className=\"movie-card\" key={movie.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt=\"movie poster\"\n              />\n              <div className=\"movie-card-text-overlay\">\n                {/* <p>{movie.overview}</p> */}\n                <h4>{movie.title}</h4>\n                <button onClick={() => dispatch(removeUserMovie(movie.id))}>\n                  Remove\n                </button>\n\n                {/* <div className=\"movie-card-overlay-btns\">\n                <div>More</div>\n                <div\n                  onClick={() => {\n                    updateUserMoviesDb(user);\n                    clickHandler(String(movie.id), user);\n                  }}\n                >\n                  Like\n                </div>\n              </div> */}\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default UserLikedMovies;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,QAAgC,4BAAhC;;;AAEA,SAASC,eAAT,GAA2B;EAAA;;EACzB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAMK,IAAI,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,IAAN,CAAWA,IAAvB,CAAxB;EACA,MAAME,YAAY,GAAGF,IAAI,CAACG,WAA1B;EACA,MAAMC,MAAM,GAAGX,SAAS,EAAxB;EACA,MAAMY,MAAM,GAAGD,MAAM,CAACE,EAAtB,CALyB,CAMzB;;EACA,MAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8ChB,QAAQ,CAAC,EAAD,CAA5D;;EACA,MAAMiB,kBAAkB,GAAG,MAAOP,YAAP,IAAwB;IACjD,MAAMQ,KAAK,GAAG,EAAd;IACA,MAAMC,OAAO,CAACC,GAAR,CACJV,YAAY,CAACW,GAAb,CAAiB,MAAOP,EAAP,IAAc;MAC7B,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CACzB,sCAAqCT,EAAG,0DADf,CAA5B;MAGA,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACAP,KAAK,CAACQ,IAAN,CAAWF,IAAX;IACD,CAND,CADI,CAAN;IASAR,qBAAqB,CAACE,KAAD,CAArB;EACD,CAZD;;EAcAd,SAAS,CAAC,MAAM;IACda,kBAAkB,CAACP,YAAD,CAAlB;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,iBAAd;MAAA,WAAiCF,IAAI,CAACmB,QAAtC;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,kBAAf;MAAA,UACGZ,kBAAkB,CAACa,MAAnB,GAA4B,CAAC,CAA7B,IACCb,kBAAkB,CAACM,GAAnB,CAAwBQ,KAAD,iBACrB;QAAK,SAAS,EAAC,YAAf;QAAA,wBACE;UACE,GAAG,EAAG,mCAAkCA,KAAK,CAACC,WAAY,EAD5D;UAEE,GAAG,EAAC;QAFN;UAAA;UAAA;UAAA;QAAA,QADF,eAKE;UAAK,SAAS,EAAC,yBAAf;UAAA,wBAEE;YAAA,UAAKD,KAAK,CAACE;UAAX;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAQ,OAAO,EAAE,MAAMxB,QAAQ,CAACF,eAAe,CAACwB,KAAK,CAACf,EAAP,CAAhB,CAA/B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA,QALF;MAAA,GAAiCe,KAAK,CAACf,EAAvC;QAAA;QAAA;QAAA;MAAA,QADF;IAFJ;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD;;GA7DQR,e;UACUH,W,EACJD,W,EAEED,S;;;KAJRK,e;AA+DT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}