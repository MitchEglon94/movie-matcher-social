{"ast":null,"code":"var _jsxFileName = \"/Users/mitchelleglon/Portfolio/movie-app/client/src/components/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { getMovies } from \"./../features/movies/movieSlice\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { login, getAllUsers } from \"./../features/users/userSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().required(),\n  password: yup.string().required()\n}).required();\nconst defaultValues = {\n  email: \"\",\n  password: \"\"\n};\nexport default function LoginForm() {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getMovies());\n    dispatch(getAllUsers());\n  }, [dispatch]);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: \"onChange\",\n    defaultValues: defaultValues\n  });\n\n  const onSubmit = async data => {\n    console.log(data);\n    dispatch(login(data));\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"69VzkfVTrI8gtQGS8KUeioc9S/g=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useEffect","getMovies","useForm","yupResolver","yup","useDispatch","login","getAllUsers","schema","object","email","string","required","password","defaultValues","LoginForm","dispatch","register","handleSubmit","reset","formState","errors","resolver","mode","onSubmit","data","console","log","message"],"sources":["/Users/mitchelleglon/Portfolio/movie-app/client/src/components/LoginForm.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { getMovies } from \"./../features/movies/movieSlice\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { login, getAllUsers } from \"./../features/users/userSlice\";\n\nconst schema = yup\n  .object({\n    email: yup.string().required(),\n    password: yup.string().required(),\n  })\n  .required();\n\nconst defaultValues = {\n  email: \"\",\n  password: \"\",\n};\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getMovies());\n    dispatch(getAllUsers());\n  }, [dispatch]);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: \"onChange\",\n    defaultValues: defaultValues,\n  });\n  const onSubmit = async (data) => {\n    console.log(data);\n    dispatch(login(data));\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input {...register(\"email\")} />\n      <p>{errors.email?.message}</p>\n\n      <input {...register(\"password\")} />\n      <p>{errors.password?.message}</p>\n\n      <input type=\"submit\" />\n    </form>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,+BAAnC;;AAEA,MAAMC,MAAM,GAAGJ,GAAG,CACfK,MADY,CACL;EACNC,KAAK,EAAEN,GAAG,CAACO,MAAJ,GAAaC,QAAb,EADD;EAENC,QAAQ,EAAET,GAAG,CAACO,MAAJ,GAAaC,QAAb;AAFJ,CADK,EAKZA,QALY,EAAf;AAOA,MAAME,aAAa,GAAG;EACpBJ,KAAK,EAAE,EADa;EAEpBG,QAAQ,EAAE;AAFU,CAAtB;AAKA,eAAe,SAASE,SAAT,GAAqB;EAAA;;EAAA;;EAClC,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;EACAL,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAACf,SAAS,EAAV,CAAR;IACAe,QAAQ,CAACT,WAAW,EAAZ,CAAR;EACD,CAHQ,EAGN,CAACS,QAAD,CAHM,CAAT;EAIA,MAAM;IACJC,QADI;IAEJC,YAFI;IAGJC,KAHI;IAIJC,SAAS,EAAE;MAAEC;IAAF;EAJP,IAKFnB,OAAO,CAAC;IACVoB,QAAQ,EAAEnB,WAAW,CAACK,MAAD,CADX;IAEVe,IAAI,EAAE,UAFI;IAGVT,aAAa,EAAEA;EAHL,CAAD,CALX;;EAUA,MAAMU,QAAQ,GAAG,MAAOC,IAAP,IAAgB;IAC/BC,OAAO,CAACC,GAAR,CAAYF,IAAZ;IACAT,QAAQ,CAACV,KAAK,CAACmB,IAAD,CAAN,CAAR;IACAN,KAAK;EACN,CAJD;;EAMA,oBACE;IAAM,QAAQ,EAAED,YAAY,CAACM,QAAD,CAA5B;IAAA,wBACE,sBAAWP,QAAQ,CAAC,OAAD;IAAnB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,2BAAII,MAAM,CAACX,KAAX,kDAAI,cAAckB;IAAlB;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE,sBAAWX,QAAQ,CAAC,UAAD;IAAnB;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA,8BAAII,MAAM,CAACR,QAAX,qDAAI,iBAAiBe;IAArB;MAAA;MAAA;MAAA;IAAA,QALF,eAOE;MAAO,IAAI,EAAC;IAAZ;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAjCuBb,S;UACLV,W,EAUbH,O;;;KAXkBa,S"},"metadata":{},"sourceType":"module"}